"use strict";(self.webpackChunkodin_tic_tac_toe=self.webpackChunkodin_tic_tac_toe||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"*{\n  margin:0;\n  padding:0;\n}\n\n#container{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', monospace\n}\n\nh1, p{\n  margin-bottom : 24px;\n  color: rgba(0, 0, 0, 0.318);\n}\n\nh1{\n  margin-top: 24px;\n}\n\n#player{\n  font-size: 24px;\n}\n\n#board{\n  border: solid 10px rgba(0, 0, 0, 0.318);\n}\n\n#board li{\n  list-style: none;\n  border: solid 1px rgba(0, 0, 0, 0.318);\n  height:100px;\n  width: 100px;\n  flex:1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n}\n\n#board ul{\n  display: flex;\n  width: 300px;\n}\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,QAAQ;EACR,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB;AACF;;AAEA;EACE,oBAAoB;EACpB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,gBAAgB;EAChB,sCAAsC;EACtC,YAAY;EACZ,YAAY;EACZ,MAAM;EACN,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,YAAY;AACd",sourcesContent:["*{\n  margin:0;\n  padding:0;\n}\n\n#container{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', monospace\n}\n\nh1, p{\n  margin-bottom : 24px;\n  color: rgba(0, 0, 0, 0.318);\n}\n\nh1{\n  margin-top: 24px;\n}\n\n#player{\n  font-size: 24px;\n}\n\n#board{\n  border: solid 10px rgba(0, 0, 0, 0.318);\n}\n\n#board li{\n  list-style: none;\n  border: solid 1px rgba(0, 0, 0, 0.318);\n  height:100px;\n  width: 100px;\n  flex:1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n}\n\n#board ul{\n  display: flex;\n  width: 300px;\n}\n\n\n\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],u=a[l]||0,p="".concat(l," ").concat(u);a[l]=u+1;var d=t(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(A);else{var f=o(A,r);r.byIndex=c,e.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),l=0;l<a.length;l++){var u=t(a[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},935:(n,e,t)=>{function r(){let n=" ";return{addMark:function(e){n=e.mark},getValue:()=>n}}var o=t(379),a=t.n(o),i=t(795),c=t.n(i),s=t(569),l=t.n(s),u=t(565),p=t.n(u),d=t(216),A=t.n(d),f=t(589),m=t.n(f),g=t(426),v={};v.styleTagTransform=m(),v.setAttributes=p(),v.insert=l().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=A(),a()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals,function(){const n=function(n={name:"Player O",mark:"o"},e={name:"Player X",mark:"x"}){const t=[n,e];let o=t[0],a=function(){let n=[];for(let e=0;e<3;e++){n[e]=[];for(let t=0;t<3;t++)n[e].push(r())}return{getBoard:()=>n,markBoard:(e,t,r)=>{let o=n[e][t];" "==o.getValue()?o.addMark(r):console.log("this place is taken")},printBoard:()=>{n.forEach(((n,e)=>{console.log(`row ${e}: ${n.reduce(((n,e)=>n+`${e.getValue()} `),"")}`)}))}}}();const i=()=>o,c=(n,e)=>n.some((n=>n.every((n=>n.getValue()==e.getValue()))));return{getActivePlayer:i,playerRound:(n,e)=>{const r=i();a.markBoard(n,e,r);const s=((n,e)=>{const t=a.getBoard(),r=t[n][e],o=t.map((n=>n.every((n=>" "!=n.getValue())))).every((n=>n));if(o)return{over:!0,winnerMark:""};{const o=[...t[n]],a=[t[0][e],t[1][e],t[2][e]],i=[t[0][0],t[1][1],t[2][2]],s=[t[2][0],t[1][1],t[0][2]],l=[];return[o,a,i,s].forEach((n=>{n.includes(r)&&l.push(n)})),{over:c(l,r),winnerMark:c(l,r)?r.getValue():""}}})(n,e);if(console.log(s),s.over)return s;o=o==t[0]?t[1]:t[0]},getBoard:a.getBoard}}(),e=document.querySelector("#container"),t=e.querySelector("#player"),o=e.querySelector("#board"),a=()=>{o.textContent="";const e=n.getBoard(),r=n.getActivePlayer();t.textContent=`${r.name}'s turn`,e.forEach(((n,e)=>{const t=document.createElement("ul");t.dataset.row=e,n.forEach(((n,e)=>{const r=document.createElement("li");r.dataset.column=e,r.textContent=n.getValue(),t.appendChild(r)})),o.appendChild(t)}))},i=e=>{const r=e.target.dataset.column,c=e.target.parentElement.dataset.row;if(!r||!c)return;const s=n.playerRound(c,r);if(a(),s){const{over:n,winnerMark:e}=s;if(n)return o.removeEventListener("click",i),void(t.textContent=`game is over${e?`, winner is player ${s.winnerMark}`:""}.`)}};o.addEventListener("click",i),a()}()}},n=>{n(n.s=935)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,